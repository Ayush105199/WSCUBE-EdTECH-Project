import { useState } from "react"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Badge } from "@/components/ui/badge"
import { Progress } from "@/components/ui/progress"
import { useNavigate } from "react-router-dom"

type Question = {
    id: number
    type: string
    question: string
    options?: string[]
    correctAnswer: string
}

type AssessmentFeedbackProps = {
    courseId: string
    answers: Record<number, string>
    questions: Question[]
}

export function AssessmentFeedback({ courseId, answers, questions }: AssessmentFeedbackProps) {
    const router = useNavigate();
    const [activeTab, setActiveTab] = useState("overview")

    // Mock feedback data - in a real app, this would be generated by AI based on the user's answers
    const feedback = {
        score: 3, // Number of correct answers
        totalQuestions: questions.length,
        percentage: 60, // Percentage score
        xpEarned: 75,
        strengths: ["Strong understanding of JavaScript array methods", "Good grasp of HTML fundamentals"],
        areasForImprovement: [
            "CSS layout concepts need more practice",
            "Code organization could be improved",
            "Deeper understanding of responsive design principles needed",
        ],
        questionFeedback: [
            {
                questionId: 1,
                isCorrect: true,
                feedback: "Correct! Margin is used to control the space outside of elements, creating space between elements.",
                suggestedResources: ["CSS Box Model Tutorial", "Margin vs Padding Guide"],
            },
            {
                questionId: 2,
                isCorrect: true,
                feedback:
                    "Correct! The push() method adds one or more elements to the end of an array and returns the new length of the array.",
                suggestedResources: ["JavaScript Array Methods", "Working with Arrays in JS"],
            },
            {
                questionId: 3,
                isCorrect: false,
                feedback:
                    "Your function works but could be improved. Consider adding parameter type checking or using ES6 arrow function syntax for more concise code.",
                suggestedResources: ["JavaScript Functions Deep Dive", "ES6 Arrow Functions"],
            },
            {
                questionId: 4,
                isCorrect: true,
                feedback: "Correct! The <a> tag is used to create hyperas in HTML.",
                suggestedResources: ["HTML as Tutorial", "Advanced a Attributes"],
            },
            {
                questionId: 5,
                isCorrect: false,
                feedback:
                    "Your explanation covers the basics, but misses some key concepts of responsive design. Consider learning more about media queries, flexible grids, and viewport units.",
                suggestedResources: ["Responsive Design Fundamentals", "Mobile-First Design Approach"],
            },
        ],
        personalizedLearningPath: [
            {
                title: "CSS Layout Mastery",
                type: "course",
                priority: "high",
                description: "Focus on flexbox, grid, and positioning to strengthen your layout skills.",
            },
            {
                title: "Responsive Design Workshop",
                type: "workshop",
                priority: "high",
                description: "Hands-on practice with responsive design principles and techniques.",
            },
            {
                title: "Code Quality & Organization",
                type: "module",
                priority: "medium",
                description: "Learn best practices for writing clean, maintainable code.",
            },
        ],
    }

    const handleContinueLearning = () => {
        router(`/courses/${courseId}`)
    }

    return (
        <div className="min-h-screen bg-background">
            <header className="border-b">
                <div className="flex flex h-16 items-center justify-between px-4">
                    <div className="flex items-center gap-6">
                        <a href="/" className="flex items-center gap-2">
                            <div className="h-8 w-8 rounded-full bg-primary flex items-center justify-center">
                                <span className="text-primary-foreground font-bold">WS</span>
                            </div>
                            <span className="font-bold text-xl">WSCube</span>
                        </a>
                        <span className="text-muted-foreground">Assessment Feedback</span>
                    </div>
                    <div className="flex items-center gap-4">
                        <Button variant="ghost" onClick={() => router("/")}>
                            Back to Dashboard
                        </Button>
                    </div>
                </div>
            </header>

            <main className="flex flex-col px-4 py-6">
                <div className="max-w-4xl mx-auto">
                    <Card className="mb-6">
                        <CardHeader>
                            <div className="flex flex-col md:flex-row md:items-center justify-between gap-4">
                                <div>
                                    <CardTitle className="text-2xl">Your Assessment Results</CardTitle>
                                    <CardDescription>AI-powered analysis of your JavaScript Basics assessment</CardDescription>
                                </div>
                                <div className="flex items-center gap-2">
                                    <div className="h-16 w-16 rounded-full bg-primary/10 flex items-center justify-center">
                                        <span className="text-2xl font-bold">{feedback.percentage}%</span>
                                    </div>
                                    <div className="text-sm">
                                        <div className="font-medium">
                                            {feedback.score}/{feedback.totalQuestions} Correct
                                        </div>
                                        <div className="text-muted-foreground">+{feedback.xpEarned} XP Earned</div>
                                    </div>
                                </div>
                            </div>
                        </CardHeader>
                        <CardContent>
                            <Tabs defaultValue="overview" className="w-full" onValueChange={setActiveTab}>
                                <TabsList className="grid grid-cols-3 mb-4">
                                    <TabsTrigger value="overview">Overview</TabsTrigger>
                                    <TabsTrigger value="detailed">Detailed Feedback</TabsTrigger>
                                    <TabsTrigger value="next-steps">Next Steps</TabsTrigger>
                                </TabsList>

                                <TabsContent value="overview" className="space-y-6">
                                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                                        <Card>
                                            <CardHeader className="pb-2">
                                                <CardTitle className="text-lg">Your Strengths</CardTitle>
                                            </CardHeader>
                                            <CardContent>
                                                <ul className="space-y-2">
                                                    {feedback.strengths.map((strength, index) => (
                                                        <li key={index} className="flex items-start gap-2">
                                                            <svg
                                                                xmlns="http://www.w3.org/2000/svg"
                                                                width="18"
                                                                height="18"
                                                                viewBox="0 0 24 24"
                                                                fill="none"
                                                                stroke="currentColor"
                                                                strokeWidth="2"
                                                                strokeLinecap="round"
                                                                strokeLinejoin="round"
                                                                className="lucide lucide-check-circle text-green-500 mt-0.5"
                                                            >
                                                                <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14" />
                                                                <path d="m9 11 3 3L22 4" />
                                                            </svg>
                                                            <span>{strength}</span>
                                                        </li>
                                                    ))}
                                                </ul>
                                            </CardContent>
                                        </Card>

                                        <Card>
                                            <CardHeader className="pb-2">
                                                <CardTitle className="text-lg">Areas for Improvement</CardTitle>
                                            </CardHeader>
                                            <CardContent>
                                                <ul className="space-y-2">
                                                    {feedback.areasForImprovement.map((area, index) => (
                                                        <li key={index} className="flex items-start gap-2">
                                                            <svg
                                                                xmlns="http://www.w3.org/2000/svg"
                                                                width="18"
                                                                height="18"
                                                                viewBox="0 0 24 24"
                                                                fill="none"
                                                                stroke="currentColor"
                                                                strokeWidth="2"
                                                                strokeLinecap="round"
                                                                strokeLinejoin="round"
                                                                className="lucide lucide-lightbulb text-amber-500 mt-0.5"
                                                            >
                                                                <path d="M15 14c.2-1 .7-1.7 1.5-2.5 1-.9 1.5-2.2 1.5-3.5A6 6 0 0 0 6 8c0 1 .2 2.2 1.5 3.5.7.7 1.3 1.5 1.5 2.5" />
                                                                <path d="M9 18h6" />
                                                                <path d="M10 22h4" />
                                                            </svg>
                                                            <span>{area}</span>
                                                        </li>
                                                    ))}
                                                </ul>
                                            </CardContent>
                                        </Card>
                                    </div>

                                    <Card>
                                        <CardHeader className="pb-2">
                                            <CardTitle className="text-lg">AI Learning Insights</CardTitle>
                                            <CardDescription>Personalized analysis based on your assessment performance</CardDescription>
                                        </CardHeader>
                                        <CardContent className="prose prose-sm max-w-none">
                                            <p>
                                                Based on your assessment results, you demonstrate a good understanding of JavaScript array
                                                methods and HTML fundamentals. Your ability to identify the correct methods for array
                                                manipulation shows you have a solid foundation in JavaScript basics.
                                            </p>
                                            <p>
                                                However, there are opportunities to strengthen your knowledge in CSS layouts and responsive
                                                design. Your answers indicate that you might benefit from more practice with CSS positioning,
                                                flexbox, and grid systems. Additionally, your code organization could be improved to enhance
                                                readability and maintainability.
                                            </p>
                                            <p>
                                                We recommend focusing on the suggested learning path to address these areas and continue
                                                building on your strengths. With targeted practice in these areas, you'll be well-equipped to
                                                tackle more advanced web development concepts.
                                            </p>
                                        </CardContent>
                                    </Card>
                                </TabsContent>

                                <TabsContent value="detailed" className="space-y-6">
                                    {feedback.questionFeedback.map((item, index) => (
                                        <Card key={index} className={item.isCorrect ? "border-green-200" : "border-amber-200"}>
                                            <CardHeader className="pb-2">
                                                <div className="flex items-center justify-between">
                                                    <CardTitle className="text-lg">Question {index + 1}</CardTitle>
                                                    <Badge
                                                        variant={item.isCorrect ? "default" : "outline"}
                                                        className={item.isCorrect ? "bg-green-500" : "text-amber-500 border-amber-500"}
                                                    >
                                                        {item.isCorrect ? "Correct" : "Needs Improvement"}
                                                    </Badge>
                                                </div>
                                                <CardDescription>{questions[index].question}</CardDescription>
                                            </CardHeader>
                                            <CardContent className="space-y-3">
                                                <div>
                                                    <div className="text-sm font-medium mb-1">Your Answer:</div>
                                                    <div className="p-3 rounded-md bg-muted text-sm">
                                                        {answers[index] || "No answer provided"}
                                                    </div>
                                                </div>

                                                {!item.isCorrect && questions[index].correctAnswer && (
                                                    <div>
                                                        <div className="text-sm font-medium mb-1">Correct Answer:</div>
                                                        <div className="p-3 rounded-md bg-green-500/10 text-sm">
                                                            {questions[index].correctAnswer}
                                                        </div>
                                                    </div>
                                                )}

                                                <div>
                                                    <div className="text-sm font-medium mb-1">Feedback:</div>
                                                    <div className="text-sm">{item.feedback}</div>
                                                </div>

                                                {item.suggestedResources && (
                                                    <div>
                                                        <div className="text-sm font-medium mb-1">Suggested Resources:</div>
                                                        <div className="flex flex-wrap gap-2">
                                                            {item.suggestedResources.map((resource, i) => (
                                                                <Badge key={i} variant="outline" className="cursor-pointer hover:bg-accent">
                                                                    {resource}
                                                                </Badge>
                                                            ))}
                                                        </div>
                                                    </div>
                                                )}
                                            </CardContent>
                                        </Card>
                                    ))}
                                </TabsContent>

                                <TabsContent value="next-steps" className="space-y-6">
                                    <Card>
                                        <CardHeader>
                                            <CardTitle>Your Personalized Learning Path</CardTitle>
                                            <CardDescription>
                                                Based on your assessment results, we've created a customized learning path to help you improve
                                            </CardDescription>
                                        </CardHeader>
                                        <CardContent className="space-y-4">
                                            {feedback.personalizedLearningPath.map((item, index) => (
                                                <div
                                                    key={index}
                                                    className="flex gap-4 p-4 rounded-lg border hover:bg-accent/50 transition-colors"
                                                >
                                                    <div className="h-12 w-12 rounded-full bg-primary/10 flex items-center justify-center shrink-0">
                                                        {item.type === "course" ? (
                                                            <svg
                                                                xmlns="http://www.w3.org/2000/svg"
                                                                width="20"
                                                                height="20"
                                                                viewBox="0 0 24 24"
                                                                fill="none"
                                                                stroke="currentColor"
                                                                strokeWidth="2"
                                                                strokeLinecap="round"
                                                                strokeLinejoin="round"
                                                                className="lucide lucide-book-open text-primary"
                                                            >
                                                                <path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z" />
                                                                <path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z" />
                                                            </svg>
                                                        ) : item.type === "workshop" ? (
                                                            <svg
                                                                xmlns="http://www.w3.org/2000/svg"
                                                                width="20"
                                                                height="20"
                                                                viewBox="0 0 24 24"
                                                                fill="none"
                                                                stroke="currentColor"
                                                                strokeWidth="2"
                                                                strokeLinecap="round"
                                                                strokeLinejoin="round"
                                                                className="lucide lucide-users text-primary"
                                                            >
                                                                <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2" />
                                                                <circle cx="9" cy="7" r="4" />
                                                                <path d="M22 21v-2a4 4 0 0 0-3-3.87" />
                                                                <path d="M16 3.13a4 4 0 0 1 0 7.75" />
                                                            </svg>
                                                        ) : (
                                                            <svg
                                                                xmlns="http://www.w3.org/2000/svg"
                                                                width="20"
                                                                height="20"
                                                                viewBox="0 0 24 24"
                                                                fill="none"
                                                                stroke="currentColor"
                                                                strokeWidth="2"
                                                                strokeLinecap="round"
                                                                strokeLinejoin="round"
                                                                className="lucide lucide-layers text-primary"
                                                            >
                                                                <path d="m12.83 2.18a2 2 0 0 0-1.66 0L2.6 6.08a1 1 0 0 0 0 1.83l8.58 3.91a2 2 0 0 0 1.66 0l8.58-3.9a1 1 0 0 0 0-1.83Z" />
                                                                <path d="m22 12-8.6 3.91a2 2 0 0 1-1.66 0L3 12" />
                                                                <path d="m22 17-8.6 3.91a2 2 0 0 1-1.66 0L3 17" />
                                                            </svg>
                                                        )}
                                                    </div>
                                                    <div className="flex-1">
                                                        <div className="flex items-center justify-between mb-1">
                                                            <h3 className="font-medium">{item.title}</h3>
                                                            <Badge
                                                                variant={
                                                                    item.priority === "high"
                                                                        ? "destructive"
                                                                        : item.priority === "medium"
                                                                            ? "secondary"
                                                                            : "outline"
                                                                }
                                                            >
                                                                {item.priority} priority
                                                            </Badge>
                                                        </div>
                                                        <p className="text-sm text-muted-foreground">{item.description}</p>
                                                        <div className="flex items-center gap-2 mt-2">
                                                            <Badge variant="outline" className="text-xs">
                                                                {item.type}
                                                            </Badge>
                                                            <span className="text-xs text-muted-foreground">Estimated time: 2-3 hours</span>
                                                        </div>
                                                    </div>
                                                </div>
                                            ))}
                                        </CardContent>
                                    </Card>

                                    <Card>
                                        <CardHeader className="pb-2">
                                            <CardTitle>Skill Progress</CardTitle>
                                            <CardDescription>Your current skill levels based on assessment results</CardDescription>
                                        </CardHeader>
                                        <CardContent className="space-y-4">
                                            <div>
                                                <div className="flex items-center justify-between mb-1">
                                                    <span className="text-sm font-medium">HTML</span>
                                                    <span className="text-sm text-muted-foreground">85%</span>
                                                </div>
                                                <Progress value={85} className="h-2" />
                                            </div>
                                            <div>
                                                <div className="flex items-center justify-between mb-1">
                                                    <span className="text-sm font-medium">CSS</span>
                                                    <span className="text-sm text-muted-foreground">60%</span>
                                                </div>
                                                <Progress value={60} className="h-2" />
                                            </div>
                                            <div>
                                                <div className="flex items-center justify-between mb-1">
                                                    <span className="text-sm font-medium">JavaScript</span>
                                                    <span className="text-sm text-muted-foreground">75%</span>
                                                </div>
                                                <Progress value={75} className="h-2" />
                                            </div>
                                            <div>
                                                <div className="flex items-center justify-between mb-1">
                                                    <span className="text-sm font-medium">Responsive Design</span>
                                                    <span className="text-sm text-muted-foreground">45%</span>
                                                </div>
                                                <Progress value={45} className="h-2" />
                                            </div>
                                        </CardContent>
                                    </Card>
                                </TabsContent>
                            </Tabs>
                        </CardContent>
                        <CardFooter className="flex justify-between">
                            <Button variant="outline" onClick={() => router("/")}>
                                Back to Dashboard
                            </Button>
                            <Button onClick={handleContinueLearning}>Continue Learning</Button>
                        </CardFooter>
                    </Card>
                </div>
            </main>
        </div>
    )
}

